<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="scut.yulin.trip.mbg.mapper.HotelDao">
  <resultMap id="BaseResultMap" type="scut.yulin.trip.model.Hotel">
    <id column="hotel_id" jdbcType="BIGINT" property="id" />
    <result column="hotel_uuid" jdbcType="CHAR" property="uuid" />
    <result column="hotel_schedule_type_uuid" jdbcType="CHAR" property="scheduleTypeUuid" />
    <result column="hotel_stars" jdbcType="INTEGER" property="stars" />
    <result column="hotel_local_name" jdbcType="VARCHAR" property="localName" />
    <result column="hotel_cn_name" jdbcType="VARCHAR" property="cnName" />
    <result column="hotel_city" jdbcType="VARCHAR" property="city" />
    <result column="hotel_country_uuid" jdbcType="CHAR" property="countryUuid" />
    <result column="hotel_location" jdbcType="VARCHAR" property="location" />
    <result column="hotel_rating" jdbcType="DECIMAL" property="rating" />
    <result column="hotel_url" jdbcType="VARCHAR" property="url" />
    <result column="hotel_check_in_time" jdbcType="VARCHAR" property="checkInTime" />
    <result column="hotel_check_out_time" jdbcType="VARCHAR" property="checkOutTime" />
    <result column="hotel_created_time" jdbcType="TIMESTAMP" property="createdTime" />
    <result column="hotel_updated_time" jdbcType="TIMESTAMP" property="updatedTime" />
    <result column="hotel_deleted" jdbcType="VARCHAR" property="deleted" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    hotel.id as hotel_id, hotel.uuid as hotel_uuid, hotel.schedule_type_uuid as hotel_schedule_type_uuid, 
    hotel.stars as hotel_stars, hotel.local_name as hotel_local_name, hotel.cn_name as hotel_cn_name, 
    hotel.city as hotel_city, hotel.country_uuid as hotel_country_uuid, hotel.`location` as `hotel_location`, 
    hotel.rating as hotel_rating, hotel.url as hotel_url, hotel.check_in_time as hotel_check_in_time, 
    hotel.check_out_time as hotel_check_out_time, hotel.created_time as hotel_created_time, 
    hotel.updated_time as hotel_updated_time, hotel.deleted as hotel_deleted
  </sql>
  <select id="selectByExample" parameterType="scut.yulin.trip.model.HotelExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from hotel hotel
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
    <if test="forUpdate != null and forUpdate == true">
      for update
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from hotel hotel
    where hotel.id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from hotel
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="scut.yulin.trip.model.HotelExample">
    delete from hotel hotel
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="scut.yulin.trip.model.Hotel" useGeneratedKeys="true">
    insert into hotel (uuid, schedule_type_uuid, stars, 
      local_name, cn_name, city, 
      country_uuid, `location`, rating, 
      url, check_in_time, check_out_time, 
      created_time, updated_time, deleted
      )
    values (#{uuid,jdbcType=CHAR}, #{scheduleTypeUuid,jdbcType=CHAR}, #{stars,jdbcType=INTEGER}, 
      #{localName,jdbcType=VARCHAR}, #{cnName,jdbcType=VARCHAR}, #{city,jdbcType=VARCHAR}, 
      #{countryUuid,jdbcType=CHAR}, #{location,jdbcType=VARCHAR}, #{rating,jdbcType=DECIMAL}, 
      #{url,jdbcType=VARCHAR}, #{checkInTime,jdbcType=VARCHAR}, #{checkOutTime,jdbcType=VARCHAR}, 
      #{createdTime,jdbcType=TIMESTAMP}, #{updatedTime,jdbcType=TIMESTAMP}, #{deleted,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="scut.yulin.trip.model.Hotel" useGeneratedKeys="true">
    insert into hotel
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="uuid != null">
        uuid,
      </if>
      <if test="scheduleTypeUuid != null">
        schedule_type_uuid,
      </if>
      <if test="stars != null">
        stars,
      </if>
      <if test="localName != null">
        local_name,
      </if>
      <if test="cnName != null">
        cn_name,
      </if>
      <if test="city != null">
        city,
      </if>
      <if test="countryUuid != null">
        country_uuid,
      </if>
      <if test="location != null">
        `location`,
      </if>
      <if test="rating != null">
        rating,
      </if>
      <if test="url != null">
        url,
      </if>
      <if test="checkInTime != null">
        check_in_time,
      </if>
      <if test="checkOutTime != null">
        check_out_time,
      </if>
      <if test="createdTime != null">
        created_time,
      </if>
      <if test="updatedTime != null">
        updated_time,
      </if>
      <if test="deleted != null">
        deleted,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="uuid != null">
        #{uuid,jdbcType=CHAR},
      </if>
      <if test="scheduleTypeUuid != null">
        #{scheduleTypeUuid,jdbcType=CHAR},
      </if>
      <if test="stars != null">
        #{stars,jdbcType=INTEGER},
      </if>
      <if test="localName != null">
        #{localName,jdbcType=VARCHAR},
      </if>
      <if test="cnName != null">
        #{cnName,jdbcType=VARCHAR},
      </if>
      <if test="city != null">
        #{city,jdbcType=VARCHAR},
      </if>
      <if test="countryUuid != null">
        #{countryUuid,jdbcType=CHAR},
      </if>
      <if test="location != null">
        #{location,jdbcType=VARCHAR},
      </if>
      <if test="rating != null">
        #{rating,jdbcType=DECIMAL},
      </if>
      <if test="url != null">
        #{url,jdbcType=VARCHAR},
      </if>
      <if test="checkInTime != null">
        #{checkInTime,jdbcType=VARCHAR},
      </if>
      <if test="checkOutTime != null">
        #{checkOutTime,jdbcType=VARCHAR},
      </if>
      <if test="createdTime != null">
        #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedTime != null">
        #{updatedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="deleted != null">
        #{deleted,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="scut.yulin.trip.model.HotelExample" resultType="java.lang.Long">
    select count(*) from hotel hotel
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update hotel hotel
    <set>
      <if test="record.id != null">
        hotel.id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.uuid != null">
        hotel.uuid = #{record.uuid,jdbcType=CHAR},
      </if>
      <if test="record.scheduleTypeUuid != null">
        hotel.schedule_type_uuid = #{record.scheduleTypeUuid,jdbcType=CHAR},
      </if>
      <if test="record.stars != null">
        hotel.stars = #{record.stars,jdbcType=INTEGER},
      </if>
      <if test="record.localName != null">
        hotel.local_name = #{record.localName,jdbcType=VARCHAR},
      </if>
      <if test="record.cnName != null">
        hotel.cn_name = #{record.cnName,jdbcType=VARCHAR},
      </if>
      <if test="record.city != null">
        hotel.city = #{record.city,jdbcType=VARCHAR},
      </if>
      <if test="record.countryUuid != null">
        hotel.country_uuid = #{record.countryUuid,jdbcType=CHAR},
      </if>
      <if test="record.location != null">
        hotel.`location` = #{record.location,jdbcType=VARCHAR},
      </if>
      <if test="record.rating != null">
        hotel.rating = #{record.rating,jdbcType=DECIMAL},
      </if>
      <if test="record.url != null">
        hotel.url = #{record.url,jdbcType=VARCHAR},
      </if>
      <if test="record.checkInTime != null">
        hotel.check_in_time = #{record.checkInTime,jdbcType=VARCHAR},
      </if>
      <if test="record.checkOutTime != null">
        hotel.check_out_time = #{record.checkOutTime,jdbcType=VARCHAR},
      </if>
      <if test="record.createdTime != null">
        hotel.created_time = #{record.createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updatedTime != null">
        hotel.updated_time = #{record.updatedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.deleted != null">
        hotel.deleted = #{record.deleted,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update hotel hotel
    set hotel.id = #{record.id,jdbcType=BIGINT},
      hotel.uuid = #{record.uuid,jdbcType=CHAR},
      hotel.schedule_type_uuid = #{record.scheduleTypeUuid,jdbcType=CHAR},
      hotel.stars = #{record.stars,jdbcType=INTEGER},
      hotel.local_name = #{record.localName,jdbcType=VARCHAR},
      hotel.cn_name = #{record.cnName,jdbcType=VARCHAR},
      hotel.city = #{record.city,jdbcType=VARCHAR},
      hotel.country_uuid = #{record.countryUuid,jdbcType=CHAR},
      hotel.`location` = #{record.location,jdbcType=VARCHAR},
      hotel.rating = #{record.rating,jdbcType=DECIMAL},
      hotel.url = #{record.url,jdbcType=VARCHAR},
      hotel.check_in_time = #{record.checkInTime,jdbcType=VARCHAR},
      hotel.check_out_time = #{record.checkOutTime,jdbcType=VARCHAR},
      hotel.created_time = #{record.createdTime,jdbcType=TIMESTAMP},
      hotel.updated_time = #{record.updatedTime,jdbcType=TIMESTAMP},
      hotel.deleted = #{record.deleted,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="scut.yulin.trip.model.Hotel">
    update hotel
    <set>
      <if test="uuid != null">
        uuid = #{uuid,jdbcType=CHAR},
      </if>
      <if test="scheduleTypeUuid != null">
        schedule_type_uuid = #{scheduleTypeUuid,jdbcType=CHAR},
      </if>
      <if test="stars != null">
        stars = #{stars,jdbcType=INTEGER},
      </if>
      <if test="localName != null">
        local_name = #{localName,jdbcType=VARCHAR},
      </if>
      <if test="cnName != null">
        cn_name = #{cnName,jdbcType=VARCHAR},
      </if>
      <if test="city != null">
        city = #{city,jdbcType=VARCHAR},
      </if>
      <if test="countryUuid != null">
        country_uuid = #{countryUuid,jdbcType=CHAR},
      </if>
      <if test="location != null">
        `location` = #{location,jdbcType=VARCHAR},
      </if>
      <if test="rating != null">
        rating = #{rating,jdbcType=DECIMAL},
      </if>
      <if test="url != null">
        url = #{url,jdbcType=VARCHAR},
      </if>
      <if test="checkInTime != null">
        check_in_time = #{checkInTime,jdbcType=VARCHAR},
      </if>
      <if test="checkOutTime != null">
        check_out_time = #{checkOutTime,jdbcType=VARCHAR},
      </if>
      <if test="createdTime != null">
        created_time = #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedTime != null">
        updated_time = #{updatedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="deleted != null">
        deleted = #{deleted,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="scut.yulin.trip.model.Hotel">
    update hotel
    set uuid = #{uuid,jdbcType=CHAR},
      schedule_type_uuid = #{scheduleTypeUuid,jdbcType=CHAR},
      stars = #{stars,jdbcType=INTEGER},
      local_name = #{localName,jdbcType=VARCHAR},
      cn_name = #{cnName,jdbcType=VARCHAR},
      city = #{city,jdbcType=VARCHAR},
      country_uuid = #{countryUuid,jdbcType=CHAR},
      `location` = #{location,jdbcType=VARCHAR},
      rating = #{rating,jdbcType=DECIMAL},
      url = #{url,jdbcType=VARCHAR},
      check_in_time = #{checkInTime,jdbcType=VARCHAR},
      check_out_time = #{checkOutTime,jdbcType=VARCHAR},
      created_time = #{createdTime,jdbcType=TIMESTAMP},
      updated_time = #{updatedTime,jdbcType=TIMESTAMP},
      deleted = #{deleted,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>