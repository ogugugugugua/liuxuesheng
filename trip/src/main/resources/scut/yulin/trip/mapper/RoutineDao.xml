<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="scut.yulin.trip.mbg.mapper.RoutineDao">
  <resultMap id="BaseResultMap" type="scut.yulin.trip.model.Routine">
    <id column="routine_id" jdbcType="BIGINT" property="id" />
    <result column="routine_uuid" jdbcType="CHAR" property="uuid" />
    <result column="routine_cur_date" jdbcType="DATE" property="curDate" />
    <result column="routine_supplement" jdbcType="VARCHAR" property="supplement" />
    <result column="routine_created_time" jdbcType="TIMESTAMP" property="createdTime" />
    <result column="routine_updated_time" jdbcType="TIMESTAMP" property="updatedTime" />
    <result column="routine_deleted" jdbcType="VARCHAR" property="deleted" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    routine.id as routine_id, routine.uuid as routine_uuid, routine.cur_date as routine_cur_date, 
    routine.supplement as routine_supplement, routine.created_time as routine_created_time, 
    routine.updated_time as routine_updated_time, routine.deleted as routine_deleted
  </sql>
  <select id="selectByExample" parameterType="scut.yulin.trip.model.RoutineExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from routine routine
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
    <if test="forUpdate != null and forUpdate == true">
      for update
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from routine routine
    where routine.id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from routine
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="scut.yulin.trip.model.RoutineExample">
    delete from routine routine
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="scut.yulin.trip.model.Routine" useGeneratedKeys="true">
    insert into routine (uuid, cur_date, supplement, 
      created_time, updated_time, deleted
      )
    values (#{uuid,jdbcType=CHAR}, #{curDate,jdbcType=DATE}, #{supplement,jdbcType=VARCHAR}, 
      #{createdTime,jdbcType=TIMESTAMP}, #{updatedTime,jdbcType=TIMESTAMP}, #{deleted,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="scut.yulin.trip.model.Routine" useGeneratedKeys="true">
    insert into routine
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="uuid != null">
        uuid,
      </if>
      <if test="curDate != null">
        cur_date,
      </if>
      <if test="supplement != null">
        supplement,
      </if>
      <if test="createdTime != null">
        created_time,
      </if>
      <if test="updatedTime != null">
        updated_time,
      </if>
      <if test="deleted != null">
        deleted,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="uuid != null">
        #{uuid,jdbcType=CHAR},
      </if>
      <if test="curDate != null">
        #{curDate,jdbcType=DATE},
      </if>
      <if test="supplement != null">
        #{supplement,jdbcType=VARCHAR},
      </if>
      <if test="createdTime != null">
        #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedTime != null">
        #{updatedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="deleted != null">
        #{deleted,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="scut.yulin.trip.model.RoutineExample" resultType="java.lang.Long">
    select count(*) from routine routine
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update routine routine
    <set>
      <if test="record.id != null">
        routine.id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.uuid != null">
        routine.uuid = #{record.uuid,jdbcType=CHAR},
      </if>
      <if test="record.curDate != null">
        routine.cur_date = #{record.curDate,jdbcType=DATE},
      </if>
      <if test="record.supplement != null">
        routine.supplement = #{record.supplement,jdbcType=VARCHAR},
      </if>
      <if test="record.createdTime != null">
        routine.created_time = #{record.createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updatedTime != null">
        routine.updated_time = #{record.updatedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.deleted != null">
        routine.deleted = #{record.deleted,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update routine routine
    set routine.id = #{record.id,jdbcType=BIGINT},
      routine.uuid = #{record.uuid,jdbcType=CHAR},
      routine.cur_date = #{record.curDate,jdbcType=DATE},
      routine.supplement = #{record.supplement,jdbcType=VARCHAR},
      routine.created_time = #{record.createdTime,jdbcType=TIMESTAMP},
      routine.updated_time = #{record.updatedTime,jdbcType=TIMESTAMP},
      routine.deleted = #{record.deleted,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="scut.yulin.trip.model.Routine">
    update routine
    <set>
      <if test="uuid != null">
        uuid = #{uuid,jdbcType=CHAR},
      </if>
      <if test="curDate != null">
        cur_date = #{curDate,jdbcType=DATE},
      </if>
      <if test="supplement != null">
        supplement = #{supplement,jdbcType=VARCHAR},
      </if>
      <if test="createdTime != null">
        created_time = #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedTime != null">
        updated_time = #{updatedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="deleted != null">
        deleted = #{deleted,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="scut.yulin.trip.model.Routine">
    update routine
    set uuid = #{uuid,jdbcType=CHAR},
      cur_date = #{curDate,jdbcType=DATE},
      supplement = #{supplement,jdbcType=VARCHAR},
      created_time = #{createdTime,jdbcType=TIMESTAMP},
      updated_time = #{updatedTime,jdbcType=TIMESTAMP},
      deleted = #{deleted,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>