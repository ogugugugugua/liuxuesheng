<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="scut.yulin.admin.mbg.mapper.ResourceRoleDao">
  <resultMap id="BaseResultMap" type="scut.yulin.admin.model.ResourceRole">
    <id column="resource_role_id" jdbcType="BIGINT" property="id" />
    <result column="resource_role_uuid" jdbcType="CHAR" property="uuid" />
    <result column="resource_role_resource_uuid" jdbcType="CHAR" property="resourceUuid" />
    <result column="resource_role_role_uuid" jdbcType="CHAR" property="roleUuid" />
    <result column="resource_role_created_time" jdbcType="TIMESTAMP" property="createdTime" />
    <result column="resource_role_updated_time" jdbcType="TIMESTAMP" property="updatedTime" />
    <result column="resource_role_deleted" jdbcType="VARCHAR" property="deleted" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    resource_role.id as resource_role_id, resource_role.uuid as resource_role_uuid, resource_role.resource_uuid as resource_role_resource_uuid, 
    resource_role.role_uuid as resource_role_role_uuid, resource_role.created_time as resource_role_created_time, 
    resource_role.updated_time as resource_role_updated_time, resource_role.deleted as resource_role_deleted
  </sql>
  <select id="selectByExample" parameterType="scut.yulin.admin.model.ResourceRoleExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from resource_role resource_role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
    <if test="forUpdate != null and forUpdate == true">
      for update
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from resource_role resource_role
    where resource_role.id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from resource_role
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="scut.yulin.admin.model.ResourceRoleExample">
    delete from resource_role resource_role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="scut.yulin.admin.model.ResourceRole" useGeneratedKeys="true">
    insert into resource_role (uuid, resource_uuid, role_uuid, 
      created_time, updated_time, deleted
      )
    values (#{uuid,jdbcType=CHAR}, #{resourceUuid,jdbcType=CHAR}, #{roleUuid,jdbcType=CHAR}, 
      #{createdTime,jdbcType=TIMESTAMP}, #{updatedTime,jdbcType=TIMESTAMP}, #{deleted,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="scut.yulin.admin.model.ResourceRole" useGeneratedKeys="true">
    insert into resource_role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="uuid != null">
        uuid,
      </if>
      <if test="resourceUuid != null">
        resource_uuid,
      </if>
      <if test="roleUuid != null">
        role_uuid,
      </if>
      <if test="createdTime != null">
        created_time,
      </if>
      <if test="updatedTime != null">
        updated_time,
      </if>
      <if test="deleted != null">
        deleted,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="uuid != null">
        #{uuid,jdbcType=CHAR},
      </if>
      <if test="resourceUuid != null">
        #{resourceUuid,jdbcType=CHAR},
      </if>
      <if test="roleUuid != null">
        #{roleUuid,jdbcType=CHAR},
      </if>
      <if test="createdTime != null">
        #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedTime != null">
        #{updatedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="deleted != null">
        #{deleted,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="scut.yulin.admin.model.ResourceRoleExample" resultType="java.lang.Long">
    select count(*) from resource_role resource_role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update resource_role resource_role
    <set>
      <if test="record.id != null">
        resource_role.id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.uuid != null">
        resource_role.uuid = #{record.uuid,jdbcType=CHAR},
      </if>
      <if test="record.resourceUuid != null">
        resource_role.resource_uuid = #{record.resourceUuid,jdbcType=CHAR},
      </if>
      <if test="record.roleUuid != null">
        resource_role.role_uuid = #{record.roleUuid,jdbcType=CHAR},
      </if>
      <if test="record.createdTime != null">
        resource_role.created_time = #{record.createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updatedTime != null">
        resource_role.updated_time = #{record.updatedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.deleted != null">
        resource_role.deleted = #{record.deleted,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update resource_role resource_role
    set resource_role.id = #{record.id,jdbcType=BIGINT},
      resource_role.uuid = #{record.uuid,jdbcType=CHAR},
      resource_role.resource_uuid = #{record.resourceUuid,jdbcType=CHAR},
      resource_role.role_uuid = #{record.roleUuid,jdbcType=CHAR},
      resource_role.created_time = #{record.createdTime,jdbcType=TIMESTAMP},
      resource_role.updated_time = #{record.updatedTime,jdbcType=TIMESTAMP},
      resource_role.deleted = #{record.deleted,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="scut.yulin.admin.model.ResourceRole">
    update resource_role
    <set>
      <if test="uuid != null">
        uuid = #{uuid,jdbcType=CHAR},
      </if>
      <if test="resourceUuid != null">
        resource_uuid = #{resourceUuid,jdbcType=CHAR},
      </if>
      <if test="roleUuid != null">
        role_uuid = #{roleUuid,jdbcType=CHAR},
      </if>
      <if test="createdTime != null">
        created_time = #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedTime != null">
        updated_time = #{updatedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="deleted != null">
        deleted = #{deleted,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="scut.yulin.admin.model.ResourceRole">
    update resource_role
    set uuid = #{uuid,jdbcType=CHAR},
      resource_uuid = #{resourceUuid,jdbcType=CHAR},
      role_uuid = #{roleUuid,jdbcType=CHAR},
      created_time = #{createdTime,jdbcType=TIMESTAMP},
      updated_time = #{updatedTime,jdbcType=TIMESTAMP},
      deleted = #{deleted,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>