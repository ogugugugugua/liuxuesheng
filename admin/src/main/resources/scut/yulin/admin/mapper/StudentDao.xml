<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="scut.yulin.admin.mbg.mapper.StudentDao">
  <resultMap id="BaseResultMap" type="scut.yulin.admin.model.Student">
    <id column="student_id" jdbcType="BIGINT" property="id" />
    <result column="student_uuid" jdbcType="CHAR" property="uuid" />
    <result column="student_account_name" jdbcType="VARCHAR" property="accountName" />
    <result column="student_pwd" jdbcType="VARCHAR" property="pwd" />
    <result column="student_gender" jdbcType="VARCHAR" property="gender" />
    <result column="student_real_name" jdbcType="VARCHAR" property="realName" />
    <result column="student_country" jdbcType="VARCHAR" property="country" />
    <result column="student_city" jdbcType="VARCHAR" property="city" />
    <result column="student_phone_code" jdbcType="VARCHAR" property="phoneCode" />
    <result column="student_local_phone" jdbcType="VARCHAR" property="localPhone" />
    <result column="student_cn_phone" jdbcType="VARCHAR" property="cnPhone" />
    <result column="student_mail" jdbcType="VARCHAR" property="mail" />
    <result column="student_id_card_number" jdbcType="VARCHAR" property="idCardNumber" />
    <result column="student_passport_number" jdbcType="VARCHAR" property="passportNumber" />
    <result column="student_avatar_url" jdbcType="VARCHAR" property="avatarUrl" />
    <result column="student_status" jdbcType="VARCHAR" property="status" />
    <result column="student_grade" jdbcType="VARCHAR" property="grade" />
    <result column="student_last_login" jdbcType="TIMESTAMP" property="lastLogin" />
    <result column="student_created_time" jdbcType="TIMESTAMP" property="createdTime" />
    <result column="student_update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="student_deleted" jdbcType="VARCHAR" property="deleted" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    student.id as student_id, student.uuid as student_uuid, student.account_name as student_account_name, 
    student.pwd as student_pwd, student.gender as student_gender, student.real_name as student_real_name, 
    student.country as student_country, student.city as student_city, student.phone_code as student_phone_code, 
    student.local_phone as student_local_phone, student.cn_phone as student_cn_phone, 
    student.mail as student_mail, student.id_card_number as student_id_card_number, student.passport_number as student_passport_number, 
    student.avatar_url as student_avatar_url, student.`status` as `student_status`, student.grade as student_grade, 
    student.last_login as student_last_login, student.created_time as student_created_time, 
    student.update_time as student_update_time, student.deleted as student_deleted
  </sql>
  <select id="selectByExample" parameterType="scut.yulin.admin.model.StudentExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from student student
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
    <if test="forUpdate != null and forUpdate == true">
      for update
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from student student
    where student.id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from student
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="scut.yulin.admin.model.StudentExample">
    delete from student student
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="scut.yulin.admin.model.Student" useGeneratedKeys="true">
    insert into student (uuid, account_name, pwd, 
      gender, real_name, country, 
      city, phone_code, local_phone, 
      cn_phone, mail, id_card_number, 
      passport_number, avatar_url, `status`, 
      grade, last_login, created_time, 
      update_time, deleted)
    values (#{uuid,jdbcType=CHAR}, #{accountName,jdbcType=VARCHAR}, #{pwd,jdbcType=VARCHAR}, 
      #{gender,jdbcType=VARCHAR}, #{realName,jdbcType=VARCHAR}, #{country,jdbcType=VARCHAR}, 
      #{city,jdbcType=VARCHAR}, #{phoneCode,jdbcType=VARCHAR}, #{localPhone,jdbcType=VARCHAR}, 
      #{cnPhone,jdbcType=VARCHAR}, #{mail,jdbcType=VARCHAR}, #{idCardNumber,jdbcType=VARCHAR}, 
      #{passportNumber,jdbcType=VARCHAR}, #{avatarUrl,jdbcType=VARCHAR}, #{status,jdbcType=VARCHAR}, 
      #{grade,jdbcType=VARCHAR}, #{lastLogin,jdbcType=TIMESTAMP}, #{createdTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{deleted,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="scut.yulin.admin.model.Student" useGeneratedKeys="true">
    insert into student
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="uuid != null">
        uuid,
      </if>
      <if test="accountName != null">
        account_name,
      </if>
      <if test="pwd != null">
        pwd,
      </if>
      <if test="gender != null">
        gender,
      </if>
      <if test="realName != null">
        real_name,
      </if>
      <if test="country != null">
        country,
      </if>
      <if test="city != null">
        city,
      </if>
      <if test="phoneCode != null">
        phone_code,
      </if>
      <if test="localPhone != null">
        local_phone,
      </if>
      <if test="cnPhone != null">
        cn_phone,
      </if>
      <if test="mail != null">
        mail,
      </if>
      <if test="idCardNumber != null">
        id_card_number,
      </if>
      <if test="passportNumber != null">
        passport_number,
      </if>
      <if test="avatarUrl != null">
        avatar_url,
      </if>
      <if test="status != null">
        `status`,
      </if>
      <if test="grade != null">
        grade,
      </if>
      <if test="lastLogin != null">
        last_login,
      </if>
      <if test="createdTime != null">
        created_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="deleted != null">
        deleted,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="uuid != null">
        #{uuid,jdbcType=CHAR},
      </if>
      <if test="accountName != null">
        #{accountName,jdbcType=VARCHAR},
      </if>
      <if test="pwd != null">
        #{pwd,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        #{gender,jdbcType=VARCHAR},
      </if>
      <if test="realName != null">
        #{realName,jdbcType=VARCHAR},
      </if>
      <if test="country != null">
        #{country,jdbcType=VARCHAR},
      </if>
      <if test="city != null">
        #{city,jdbcType=VARCHAR},
      </if>
      <if test="phoneCode != null">
        #{phoneCode,jdbcType=VARCHAR},
      </if>
      <if test="localPhone != null">
        #{localPhone,jdbcType=VARCHAR},
      </if>
      <if test="cnPhone != null">
        #{cnPhone,jdbcType=VARCHAR},
      </if>
      <if test="mail != null">
        #{mail,jdbcType=VARCHAR},
      </if>
      <if test="idCardNumber != null">
        #{idCardNumber,jdbcType=VARCHAR},
      </if>
      <if test="passportNumber != null">
        #{passportNumber,jdbcType=VARCHAR},
      </if>
      <if test="avatarUrl != null">
        #{avatarUrl,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="grade != null">
        #{grade,jdbcType=VARCHAR},
      </if>
      <if test="lastLogin != null">
        #{lastLogin,jdbcType=TIMESTAMP},
      </if>
      <if test="createdTime != null">
        #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="deleted != null">
        #{deleted,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="scut.yulin.admin.model.StudentExample" resultType="java.lang.Long">
    select count(*) from student student
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update student student
    <set>
      <if test="record.id != null">
        student.id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.uuid != null">
        student.uuid = #{record.uuid,jdbcType=CHAR},
      </if>
      <if test="record.accountName != null">
        student.account_name = #{record.accountName,jdbcType=VARCHAR},
      </if>
      <if test="record.pwd != null">
        student.pwd = #{record.pwd,jdbcType=VARCHAR},
      </if>
      <if test="record.gender != null">
        student.gender = #{record.gender,jdbcType=VARCHAR},
      </if>
      <if test="record.realName != null">
        student.real_name = #{record.realName,jdbcType=VARCHAR},
      </if>
      <if test="record.country != null">
        student.country = #{record.country,jdbcType=VARCHAR},
      </if>
      <if test="record.city != null">
        student.city = #{record.city,jdbcType=VARCHAR},
      </if>
      <if test="record.phoneCode != null">
        student.phone_code = #{record.phoneCode,jdbcType=VARCHAR},
      </if>
      <if test="record.localPhone != null">
        student.local_phone = #{record.localPhone,jdbcType=VARCHAR},
      </if>
      <if test="record.cnPhone != null">
        student.cn_phone = #{record.cnPhone,jdbcType=VARCHAR},
      </if>
      <if test="record.mail != null">
        student.mail = #{record.mail,jdbcType=VARCHAR},
      </if>
      <if test="record.idCardNumber != null">
        student.id_card_number = #{record.idCardNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.passportNumber != null">
        student.passport_number = #{record.passportNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.avatarUrl != null">
        student.avatar_url = #{record.avatarUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        student.`status` = #{record.status,jdbcType=VARCHAR},
      </if>
      <if test="record.grade != null">
        student.grade = #{record.grade,jdbcType=VARCHAR},
      </if>
      <if test="record.lastLogin != null">
        student.last_login = #{record.lastLogin,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createdTime != null">
        student.created_time = #{record.createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        student.update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.deleted != null">
        student.deleted = #{record.deleted,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update student student
    set student.id = #{record.id,jdbcType=BIGINT},
      student.uuid = #{record.uuid,jdbcType=CHAR},
      student.account_name = #{record.accountName,jdbcType=VARCHAR},
      student.pwd = #{record.pwd,jdbcType=VARCHAR},
      student.gender = #{record.gender,jdbcType=VARCHAR},
      student.real_name = #{record.realName,jdbcType=VARCHAR},
      student.country = #{record.country,jdbcType=VARCHAR},
      student.city = #{record.city,jdbcType=VARCHAR},
      student.phone_code = #{record.phoneCode,jdbcType=VARCHAR},
      student.local_phone = #{record.localPhone,jdbcType=VARCHAR},
      student.cn_phone = #{record.cnPhone,jdbcType=VARCHAR},
      student.mail = #{record.mail,jdbcType=VARCHAR},
      student.id_card_number = #{record.idCardNumber,jdbcType=VARCHAR},
      student.passport_number = #{record.passportNumber,jdbcType=VARCHAR},
      student.avatar_url = #{record.avatarUrl,jdbcType=VARCHAR},
      student.`status` = #{record.status,jdbcType=VARCHAR},
      student.grade = #{record.grade,jdbcType=VARCHAR},
      student.last_login = #{record.lastLogin,jdbcType=TIMESTAMP},
      student.created_time = #{record.createdTime,jdbcType=TIMESTAMP},
      student.update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      student.deleted = #{record.deleted,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="scut.yulin.admin.model.Student">
    update student
    <set>
      <if test="uuid != null">
        uuid = #{uuid,jdbcType=CHAR},
      </if>
      <if test="accountName != null">
        account_name = #{accountName,jdbcType=VARCHAR},
      </if>
      <if test="pwd != null">
        pwd = #{pwd,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        gender = #{gender,jdbcType=VARCHAR},
      </if>
      <if test="realName != null">
        real_name = #{realName,jdbcType=VARCHAR},
      </if>
      <if test="country != null">
        country = #{country,jdbcType=VARCHAR},
      </if>
      <if test="city != null">
        city = #{city,jdbcType=VARCHAR},
      </if>
      <if test="phoneCode != null">
        phone_code = #{phoneCode,jdbcType=VARCHAR},
      </if>
      <if test="localPhone != null">
        local_phone = #{localPhone,jdbcType=VARCHAR},
      </if>
      <if test="cnPhone != null">
        cn_phone = #{cnPhone,jdbcType=VARCHAR},
      </if>
      <if test="mail != null">
        mail = #{mail,jdbcType=VARCHAR},
      </if>
      <if test="idCardNumber != null">
        id_card_number = #{idCardNumber,jdbcType=VARCHAR},
      </if>
      <if test="passportNumber != null">
        passport_number = #{passportNumber,jdbcType=VARCHAR},
      </if>
      <if test="avatarUrl != null">
        avatar_url = #{avatarUrl,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        `status` = #{status,jdbcType=VARCHAR},
      </if>
      <if test="grade != null">
        grade = #{grade,jdbcType=VARCHAR},
      </if>
      <if test="lastLogin != null">
        last_login = #{lastLogin,jdbcType=TIMESTAMP},
      </if>
      <if test="createdTime != null">
        created_time = #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="deleted != null">
        deleted = #{deleted,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="scut.yulin.admin.model.Student">
    update student
    set uuid = #{uuid,jdbcType=CHAR},
      account_name = #{accountName,jdbcType=VARCHAR},
      pwd = #{pwd,jdbcType=VARCHAR},
      gender = #{gender,jdbcType=VARCHAR},
      real_name = #{realName,jdbcType=VARCHAR},
      country = #{country,jdbcType=VARCHAR},
      city = #{city,jdbcType=VARCHAR},
      phone_code = #{phoneCode,jdbcType=VARCHAR},
      local_phone = #{localPhone,jdbcType=VARCHAR},
      cn_phone = #{cnPhone,jdbcType=VARCHAR},
      mail = #{mail,jdbcType=VARCHAR},
      id_card_number = #{idCardNumber,jdbcType=VARCHAR},
      passport_number = #{passportNumber,jdbcType=VARCHAR},
      avatar_url = #{avatarUrl,jdbcType=VARCHAR},
      `status` = #{status,jdbcType=VARCHAR},
      grade = #{grade,jdbcType=VARCHAR},
      last_login = #{lastLogin,jdbcType=TIMESTAMP},
      created_time = #{createdTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      deleted = #{deleted,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>