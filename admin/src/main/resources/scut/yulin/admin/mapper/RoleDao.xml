<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="scut.yulin.admin.mbg.mapper.RoleDao">
  <resultMap id="BaseResultMap" type="scut.yulin.admin.model.Role">
    <id column="role_id" jdbcType="BIGINT" property="id" />
    <result column="role_uuid" jdbcType="CHAR" property="uuid" />
    <result column="role_name" jdbcType="VARCHAR" property="name" />
    <result column="role_nameZh" jdbcType="VARCHAR" property="namezh" />
    <result column="role_description" jdbcType="VARCHAR" property="description" />
    <result column="role_count" jdbcType="INTEGER" property="count" />
    <result column="role_sort" jdbcType="INTEGER" property="sort" />
    <result column="role_status" jdbcType="VARCHAR" property="status" />
    <result column="role_created_time" jdbcType="TIMESTAMP" property="createdTime" />
    <result column="role_updated_time" jdbcType="TIMESTAMP" property="updatedTime" />
    <result column="role_deleted" jdbcType="VARCHAR" property="deleted" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    role.id as role_id, role.uuid as role_uuid, role.`name` as `role_name`, role.nameZh as role_nameZh, 
    role.description as role_description, role.`count` as `role_count`, role.sort as role_sort, 
    role.`status` as `role_status`, role.created_time as role_created_time, role.updated_time as role_updated_time, 
    role.deleted as role_deleted
  </sql>
  <select id="selectByExample" parameterType="scut.yulin.admin.model.RoleExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from role role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
    <if test="forUpdate != null and forUpdate == true">
      for update
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from role role
    where role.id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from role
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="scut.yulin.admin.model.RoleExample">
    delete from role role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="scut.yulin.admin.model.Role" useGeneratedKeys="true">
    insert into role (uuid, `name`, nameZh, 
      description, `count`, sort, 
      `status`, created_time, updated_time, 
      deleted)
    values (#{uuid,jdbcType=CHAR}, #{name,jdbcType=VARCHAR}, #{namezh,jdbcType=VARCHAR}, 
      #{description,jdbcType=VARCHAR}, #{count,jdbcType=INTEGER}, #{sort,jdbcType=INTEGER}, 
      #{status,jdbcType=VARCHAR}, #{createdTime,jdbcType=TIMESTAMP}, #{updatedTime,jdbcType=TIMESTAMP}, 
      #{deleted,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="scut.yulin.admin.model.Role" useGeneratedKeys="true">
    insert into role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="uuid != null">
        uuid,
      </if>
      <if test="name != null">
        `name`,
      </if>
      <if test="namezh != null">
        nameZh,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="count != null">
        `count`,
      </if>
      <if test="sort != null">
        sort,
      </if>
      <if test="status != null">
        `status`,
      </if>
      <if test="createdTime != null">
        created_time,
      </if>
      <if test="updatedTime != null">
        updated_time,
      </if>
      <if test="deleted != null">
        deleted,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="uuid != null">
        #{uuid,jdbcType=CHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="namezh != null">
        #{namezh,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="count != null">
        #{count,jdbcType=INTEGER},
      </if>
      <if test="sort != null">
        #{sort,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="createdTime != null">
        #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedTime != null">
        #{updatedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="deleted != null">
        #{deleted,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="scut.yulin.admin.model.RoleExample" resultType="java.lang.Long">
    select count(*) from role role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update role role
    <set>
      <if test="record.id != null">
        role.id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.uuid != null">
        role.uuid = #{record.uuid,jdbcType=CHAR},
      </if>
      <if test="record.name != null">
        role.`name` = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.namezh != null">
        role.nameZh = #{record.namezh,jdbcType=VARCHAR},
      </if>
      <if test="record.description != null">
        role.description = #{record.description,jdbcType=VARCHAR},
      </if>
      <if test="record.count != null">
        role.`count` = #{record.count,jdbcType=INTEGER},
      </if>
      <if test="record.sort != null">
        role.sort = #{record.sort,jdbcType=INTEGER},
      </if>
      <if test="record.status != null">
        role.`status` = #{record.status,jdbcType=VARCHAR},
      </if>
      <if test="record.createdTime != null">
        role.created_time = #{record.createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updatedTime != null">
        role.updated_time = #{record.updatedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.deleted != null">
        role.deleted = #{record.deleted,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update role role
    set role.id = #{record.id,jdbcType=BIGINT},
      role.uuid = #{record.uuid,jdbcType=CHAR},
      role.`name` = #{record.name,jdbcType=VARCHAR},
      role.nameZh = #{record.namezh,jdbcType=VARCHAR},
      role.description = #{record.description,jdbcType=VARCHAR},
      role.`count` = #{record.count,jdbcType=INTEGER},
      role.sort = #{record.sort,jdbcType=INTEGER},
      role.`status` = #{record.status,jdbcType=VARCHAR},
      role.created_time = #{record.createdTime,jdbcType=TIMESTAMP},
      role.updated_time = #{record.updatedTime,jdbcType=TIMESTAMP},
      role.deleted = #{record.deleted,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="scut.yulin.admin.model.Role">
    update role
    <set>
      <if test="uuid != null">
        uuid = #{uuid,jdbcType=CHAR},
      </if>
      <if test="name != null">
        `name` = #{name,jdbcType=VARCHAR},
      </if>
      <if test="namezh != null">
        nameZh = #{namezh,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="count != null">
        `count` = #{count,jdbcType=INTEGER},
      </if>
      <if test="sort != null">
        sort = #{sort,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        `status` = #{status,jdbcType=VARCHAR},
      </if>
      <if test="createdTime != null">
        created_time = #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedTime != null">
        updated_time = #{updatedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="deleted != null">
        deleted = #{deleted,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="scut.yulin.admin.model.Role">
    update role
    set uuid = #{uuid,jdbcType=CHAR},
      `name` = #{name,jdbcType=VARCHAR},
      nameZh = #{namezh,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      `count` = #{count,jdbcType=INTEGER},
      sort = #{sort,jdbcType=INTEGER},
      `status` = #{status,jdbcType=VARCHAR},
      created_time = #{createdTime,jdbcType=TIMESTAMP},
      updated_time = #{updatedTime,jdbcType=TIMESTAMP},
      deleted = #{deleted,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>